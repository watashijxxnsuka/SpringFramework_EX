<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- ContextLoaderListener 객체에서 사용하는 설정파일.
        web.xml 을 읽으면서 제일 먼저 불러오는 설정파일이다.
        프로젝트에서 전반적으로 사용되는 자원(DB 커넥션, 트랜젝션처리, 파일업로드 등)을 생성하고 설정.
        bean element 로 객체를 생성해서 스프링 컨테이너에 등록할 수 있는 설정도 할 수 있다.
    -->
    <!-- root-context.xml, servlet-content.xml 파일을 읽어서 스프링 컨테이너를 구동할 때,
        bean 엘리먼트로 등록되어 있는 클래스들은 객체로 자동 생성하여 bean 객체로 등록한다.

        일반적으로 개발자가 작성한 클래스들은 설정파일에 bean 엘리먼트에 등록하지 않고
        라이브러리(jar)안에 있는 클래스들을 주로 bean 엘리먼트로 등록한다.

        개발자가 작성한 클래스들은 어노테이션을 달 수 있지만,
        jar 파일안에 있는 클래스들은 개발자들이 수정할 수 없기 때문에 어노테이션을 달 수 없어서
        설정 파일에 bean 엘리먼트로 등록해서 객체를 생성하도록 한다.

        bean 엘리먼트나 어노테이션을 통해 생성되는 객체는 싱글톤 패턴을 하나의 객체를 공유해서 사용하는 방식이다.
    -->

    <!-- IOC(Inverse Of control / 제어의 역전): 개발자가 직접하던 객체 생성, 의존성 주입 등을
        스프링 설정 파일을 통해 스프링 프레임워크에 위임.
    -->

    <!-- bean 엘리먼트에 등록된 클래스들은 스프링 컨테이너가 구동되면서 객체를 자동으로 생성한다. -->
    <bean id="kiaCar" class="com.bit.springboard.coupling.KiaCar" />
    <bean id="hyundaiCar" class="com.bit.springboard.coupling.HyundaiCar" />
</beans>